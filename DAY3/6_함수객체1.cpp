#include <iostream>

// function object(함수 객체)
// => () 연산자를 재정의 해서 함수 처럼 사용가능한 객체
// => () 연산자는 대부분 "상수멤버함수"로 만들게 됩니다.

// 왜?? 일반함수를 사용하면 되는데.. 함수객체를 사용하나요 ?
// 장점이 너무 많습니다.
// 1. 상태를 가지는 함수
// 2. 클로져!!!
// 3. 일반함수보다 빠르다.
// 4. ADL 회피
// => C++20 부터 추가되는 거의 모든 알고리즘은 함수객체 입니다.

struct Plus
{
	int operator()(int a, int b) const 
	{
		return a + b;
	}
};
int main()
{
	 Plus p;	// p는 함수가 아니고, Plus 타입의 객체 입니다.		

	int n = p(1, 2);// 객체인 p를 함수 처럼 사용합니다.
					// "함수 객체" 라고 합니다.
					// p.operator()(1, 2) 로 해석됩니다

	int n2 = p.operator()(1, 2); // 직접 호출도 가능합니다.
	
}
